{"version":3,"sources":["components/Header/Header.jsx","components/Header/index.js","components/Task/index.js","components/Task/Task.jsx","components/TaskList/TaskList.jsx","components/TaskList/index.js","components/TasksFilter/index.js","components/TasksFilter/TasksFilter.jsx","components/Footer/Footer.jsx","components/Footer/index.js","components/App/App.jsx","components/App/index.js","index.js"],"names":["Header","state","value","onSubmit","event","addTask","props","preventDefault","trim","setState","onInputChange","target","this","className","placeholder","onChange","Component","Task","id","description","time","deleteTask","onToggleCompleted","onEditing","editing","active","editTask","date","formatDistanceToNow","includeSeconds","classNames","checked","type","htmlFor","onClick","style","padding","defaultValue","onKeyDown","keyCode","TaskList","tasks","map","item","key","newDescription","defaultProps","TasksFilter","changeFilter","filterProp","Footer","callDeleteForAll","filter","forEach","leftCount","App","maxId","createTask","text","newItem","i","findIndex","el","slice","toggleProps","oldTask","newTask","newTasks","arr","propName","Date","now","filteredTasks","completedCount","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6af20171.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Header extends Component {\n  static propTypes = {\n    addTask: PropTypes.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  onSubmit = (event) => {\n    const { value } = this.state;\n    const { addTask } = this.props;\n    event.preventDefault();\n    if (value.trim()) {\n      addTask(value);\n    }\n    this.setState({ value: '' });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ value: event.target.value });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form className=\"header\" onSubmit={this.onSubmit}>\n        <h1>todos</h1>\n        <label>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onInputChange}\n            value={value}\n          />\n        </label>\n      </form>\n    );\n  }\n}\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import Task from './Task';\r\n\r\nexport default Task;\r\n","import React from 'react';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport PropTypes from 'prop-types';\n\nconst Task = ({ id, description, time, deleteTask, onToggleCompleted, onEditing, editing, active, editTask }) => {\n  const onInputChange = (event) => {\n    if (event.keyCode === 13) {\n      const description = event.target.value;\n      if (description.trim()) {\n        editTask(id, description);\n      }\n      onEditing(id);\n    } else if (event.keyCode === 27) {\n      onEditing(id);\n    }\n  };\n\n  const date = formatDistanceToNow(time, {\n    includeSeconds: true,\n  });\n\n  let classNames = '';\n\n  if (!active) {\n    classNames += ' completed';\n  }\n  if (active) {\n    classNames += ' active';\n  }\n  if (editing) {\n    classNames += ' editing';\n  }\n  return (\n    <li className={classNames}>\n      <div className=\"view\">\n        <input id={id} checked={!active} className=\"toggle\" type=\"checkbox\" onChange={() => onToggleCompleted(id)} />\n        <label htmlFor={id}>\n          <span className=\"description\">{description}</span>\n          <span className=\"created\">{date}</span>\n        </label>\n        <button aria-label=\"edit btn\" type=\"button\" className=\"icon icon-edit\" onClick={() => onEditing(id)} />\n        <button aria-label=\"delete btn\" type=\"button\" className=\"icon icon-destroy\" onClick={() => deleteTask(id)} />\n      </div>\n      {editing && (\n        <label style={{ padding: 0 }}>\n          <input type=\"text\" className=\"edit\" defaultValue={description} onKeyDown={onInputChange} />\n        </label>\n      )}\n    </li>\n  );\n};\n\nTask.propTypes = {\n  id: PropTypes.number.isRequired,\n  description: PropTypes.string.isRequired,\n  time: PropTypes.number.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  onToggleCompleted: PropTypes.func.isRequired,\n  onEditing: PropTypes.func.isRequired,\n  editing: PropTypes.bool.isRequired,\n  active: PropTypes.bool.isRequired,\n  editTask: PropTypes.func.isRequired,\n};\n\nexport default Task;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Task from '../Task';\n\nconst TaskList = ({ tasks, deleteTask, onToggleCompleted, onEditing, editTask }) => (\n  <ul className=\"todo-list\">\n    {tasks.map((item) => (\n      <Task\n        {...item}\n        key={item.id}\n        deleteTask={(id) => deleteTask(id)}\n        onToggleCompleted={(id) => onToggleCompleted(id)}\n        onEditing={(id) => onEditing(id)}\n        editTask={(id, newDescription) => editTask(id, newDescription)}\n      />\n    ))}\n  </ul>\n);\n\nTaskList.defaultProps = {\n  tasks: [],\n};\n\nTaskList.propTypes = {\n  tasks: PropTypes.arrayOf(PropTypes.object),\n  deleteTask: PropTypes.func.isRequired,\n  onToggleCompleted: PropTypes.func.isRequired,\n  onEditing: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n};\n\nexport default TaskList;\n","import TaskList from './TaskList';\r\n\r\nexport default TaskList;\r\n","import TasksFilter from './TasksFilter';\r\n\r\nexport default TasksFilter;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TasksFilter = ({ changeFilter, filterProp }) => (\n  <ul className=\"filters\">\n    <li>\n      <button type=\"button\" className={filterProp === 'all' ? 'selected' : null} onClick={() => changeFilter('all')}>\n        All\n      </button>\n    </li>\n    <li>\n      <button\n        type=\"button\"\n        className={filterProp === 'active' ? 'selected' : null}\n        onClick={() => changeFilter('active')}\n      >\n        Active\n      </button>\n    </li>\n    <li>\n      <button\n        type=\"button\"\n        className={filterProp === 'completed' ? 'selected' : null}\n        onClick={() => changeFilter('completed')}\n      >\n        Completed\n      </button>\n    </li>\n  </ul>\n);\n\nTasksFilter.propTypes = {\n  changeFilter: PropTypes.func.isRequired,\n  filterProp: PropTypes.string.isRequired,\n};\n\nexport default TasksFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TasksFilter from '../TasksFilter';\n\nexport default class Footer extends Component {\n  static defaultProps = {\n    leftCount: 0,\n    filterProp: 'all',\n  };\n\n  static propTypes = {\n    leftCount: PropTypes.number,\n    filterProp: PropTypes.string,\n    tasks: PropTypes.arrayOf(PropTypes.object).isRequired,\n    deleteTask: PropTypes.func.isRequired,\n    changeFilter: PropTypes.func.isRequired,\n  };\n\n  callDeleteForAll = () => {\n    const { tasks, deleteTask } = this.props;\n    const ids = tasks.filter((item) => !item.active).map((item) => item.id);\n    ids.forEach((id) => deleteTask(id));\n  };\n\n  render() {\n    const { leftCount, changeFilter, filterProp } = this.props;\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">{leftCount} items left</span>\n        <TasksFilter changeFilter={(filterProp) => changeFilter(filterProp)} filterProp={filterProp} />\n        <button type=\"button\" className=\"clear-completed\" onClick={this.callDeleteForAll}>\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n","import Footer from './Footer';\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport Header from '../Header';\nimport TaskList from '../TaskList';\nimport Footer from '../Footer';\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    tasks: [this.createTask('Completed task'), this.createTask('Editing task'), this.createTask('Active task')],\n    filterProp: 'all',\n  };\n\n  changeFilter = (filterProp) => {\n    this.setState({\n      filterProp,\n    });\n  };\n\n  addTask = (text, date) => {\n    const newItem = this.createTask(text, date);\n    this.setState(({ tasks }) => {\n      const newArr = [...tasks, newItem];\n      return {\n        tasks: newArr,\n      };\n    });\n  };\n\n  deleteTask = (id) => {\n    this.setState(({ tasks }) => {\n      const i = tasks.findIndex((el) => el.id === id);\n      const newTasks = [...tasks.slice(0, i), ...tasks.slice(i + 1)];\n      return {\n        tasks: newTasks,\n      };\n    });\n  };\n\n  onToggleCompleted = (id) => {\n    this.setState(({ tasks }) => ({ tasks: this.toggleProps(tasks, id, 'active') }));\n  };\n\n  onEditing = (id) => {\n    this.setState(({ tasks }) => ({ tasks: this.toggleProps(tasks, id, 'editing') }));\n  };\n\n  editTask = (id, newDescription) => {\n    const { tasks } = this.state;\n    const i = tasks.findIndex((el) => el.id === id);\n    const oldTask = tasks[i];\n    const newTask = { ...oldTask, description: newDescription };\n    const newTasks = [...tasks.slice(0, i), newTask, ...tasks.slice(i + 1)];\n    this.setState({ tasks: newTasks });\n  };\n\n  toggleProps(arr, id, propName) {\n    const i = arr.findIndex((el) => el.id === id);\n    const oldTask = arr[i];\n    const newTask = { ...oldTask, [propName]: !oldTask[propName] };\n    return [...arr.slice(0, i), newTask, ...arr.slice(i + 1)];\n  }\n\n  createTask(text) {\n    const date = Date.now();\n    this.maxId += 1;\n    return {\n      description: text,\n      time: date,\n      id: this.maxId,\n      editing: false,\n      active: true,\n    };\n  }\n\n  render() {\n    const { tasks, filterProp } = this.state;\n    const filteredTasks =\n      filterProp === 'all' ? tasks : tasks.filter((item) => (filterProp === 'completed' ? !item.active : item.active));\n    const completedCount = tasks.filter((el) => !el.active).length;\n    const leftCount = tasks.length - completedCount;\n    return (\n      <section className=\"todoapp\">\n        <Header addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            tasks={filteredTasks}\n            deleteTask={(id) => this.deleteTask(id)}\n            onToggleCompleted={(id) => this.onToggleCompleted(id)}\n            onEditing={(id) => this.onEditing(id)}\n            editTask={(id, newDescription) => this.editTask(id, newDescription)}\n          />\n          <Footer\n            leftCount={leftCount}\n            filterProp={filterProp}\n            tasks={tasks}\n            deleteTask={(id) => this.deleteTask(id)}\n            changeFilter={(filterProp) => this.changeFilter(filterProp)}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n","import App from './App';\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}